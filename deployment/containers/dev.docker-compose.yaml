# Docker compose file to build/run the entire components stack in development mode
# Note that the local source tree is mounted into the containers so that changes are applied automagically
services:
    # -- Base images --
    # Build-only Python base image
    py-base:
        image: rds-ng/py-base:develop
        build:
            context: ../../
            dockerfile: deployment/containers/py-base/dev.Dockerfile
        deploy:
            mode: replicated
            replicas: 0

    # Build-only Node base image
    node-base:
        image: rds-ng/node-base:develop
        build:
            context: ../../
            dockerfile: deployment/containers/node-base/dev.Dockerfile
        deploy:
            mode: replicated
            replicas: 0

    # -- Component images --
    # Server service
    server:
        image: rds-ng/server:develop
        volumes:
            -   type: bind
                source: ../../src
                target: /component
            -   type: bind
                source: ../../.data
                target: /data
        build:
            context: ../../
            dockerfile: deployment/containers/backend-component/dev.Dockerfile
            args:
                COMPONENT_NAME: "server"
        depends_on:
            - py-base
        ports:
            - "4200:6969"
        environment:
            - RDS_NETWORK_API_KEY="some_key"
            - RDS_NETWORK_SERVER_ALLOWED_ORIGINS=*
            # - RDS_STORAGE_DATABASE_ENGINE=sqlite
            # - RDS_STORAGE_DATABASE_SQLITE_FILE=/data/rds.db
            - RDS_AUTHORIZATION_OAUTH2_SECRETS_HOST=oNwLWleq5FV8odCHahsp8dL74vKLLbKzWnYVc2PqFgVRUY2IYdyeMyg5qSAAnTBh
            - RDS_AUTHORIZATION_OAUTH2_SECRETS_OSF=AISobllXaYyE6tmwI14gPYpQ1uTr6NFjq9ECAsKq
            - RDS_AUTHORIZATION_OAUTH2_SECRETS_ZENODO=npDk9z6sHyUaCrI8h0wX2eIexYbGfr4CzVNfMAopvmuYSqmUumino8HMFxYC
            - RDS_AUTHORIZATION_OAUTH2_SECRETS_STUB=c4X1LOf1YLBacQtu6HAR3iDmLajiTeBHiZWtKegDHUSMdmlerGOOU3QjSRKYbXXh
            # - RDS_INTEGRATION_DEFAULT_ROOT_PATH=/files

    # Connector: OSF
    connector-osf:
        image: rds-ng/connector-osf:develop
        volumes:
            -   type: bind
                source: ../../src
                target: /component
            -   type: bind
                source: ../../.data
                target: /data
        build:
            context: ../../
            dockerfile: deployment/containers/backend-component/dev.Dockerfile
            args:
                COMPONENT_NAME: "connectors/osf"
        depends_on:
            - py-base
        ports:
            - "4300:6969"
        environment:
            - RDS_NETWORK_API_KEY="some_key"
            - RDS_NETWORK_SERVER_ALLOWED_ORIGINS=*
            - RDS_AUTHORIZATION_OAUTH2_CLIENT_REDIRECT_URL=https://www.gibbet-nicht.de/apps/rdsng/main
            - RDS_AUTHORIZATION_OAUTH2_CLIENT_ID=b1b7e874714841239913eddd87f55c57

    # Connector: Zenodo
    connector-zenodo:
        image: rds-ng/connector-zenodo:develop
        volumes:
            -   type: bind
                source: ../../src
                target: /component
            -   type: bind
                source: ../../.data
                target: /data
        build:
            context: ../../
            dockerfile: deployment/containers/backend-component/dev.Dockerfile
            args:
                COMPONENT_NAME: "connectors/zenodo"
        depends_on:
            - py-base
        ports:
            - "4400:6969"
        environment:
            - RDS_NETWORK_API_KEY="some_key"
            - RDS_NETWORK_SERVER_ALLOWED_ORIGINS=*
            - RDS_AUTHORIZATION_OAUTH2_CLIENT_REDIRECT_URL=https://www.gibbet-nicht.de/apps/rdsng/main
            - RDS_AUTHORIZATION_OAUTH2_CLIENT_ID=B6juPB6UeJlSVsZhoZIU0NfMLZKHvKVHZkouMQHW

    # Connector: Stub
    connector-stub:
        image: rds-ng/connector-stub:develop
        volumes:
            -   type: bind
                source: ../../src
                target: /component
            -   type: bind
                source: ../../.data
                target: /data
        build:
            context: ../../
            dockerfile: deployment/containers/backend-component/dev.Dockerfile
            args:
                COMPONENT_NAME: "connectors/stub"
        depends_on:
            - py-base
        ports:
            - "4900:6969"
        environment:
            - RDS_NETWORK_API_KEY="some_key"
            - RDS_NETWORK_SERVER_ALLOWED_ORIGINS=*
            - RDS_AUTHORIZATION_STRATEGY=oauth2
            - RDS_AUTHORIZATION_OAUTH2_SERVER_HOST=http://10.0.2.15:8080
            - RDS_AUTHORIZATION_OAUTH2_SERVER_AUTHORIZATION_ENDPOINT=/apps/oauth2/authorize
            - RDS_AUTHORIZATION_OAUTH2_SERVER_TOKEN_ENDPOINT=/apps/oauth2/api/v1/token
            - RDS_AUTHORIZATION_OAUTH2_CLIENT_REDIRECT_URL=http://localhost:8080/apps/rdsng/main
            - RDS_AUTHORIZATION_OAUTH2_CLIENT_ID=gLH6yzRM7eBtTRCpAVxVExIJnw62RZ4xwXzJCflysIntwfOZ0ZxwwIYOe4RkoH1h

    # Web frontend
    frontend:
        image: rds-ng/frontend:develop
        volumes:
            -   type: bind
                source: ../../src/frontend/src
                target: /app/frontend/src
            -   type: bind
                source: ../../src/common
                target: /app/common
        build:
            context: ../../
            dockerfile: deployment/containers/web-component/dev.Dockerfile
            args:
                COMPONENT_NAME: "frontend"
        depends_on:
            - node-base
        ports:
            - "8000:6969"
        environment:
            - NODE_TLS_REJECT_UNAUTHORIZED=0
            - RDS_NETWORK_CLIENT_SERVER_ADDRESS=http://localhost:4200
            # - RDS_INTEGRATION_SCHEME=basic
            - RDS_INTEGRATION_SCHEME=host
            - RDS_INTEGRATION_HOST_API_URL=http://localhost:8080/apps/rdsng/api/v1
            - RDS_AUTHORIZATION_OAUTH2_CLIENT_REDIRECT_URL=http://localhost:8080/apps/rdsng/main
            - RDS_AUTHORIZATION_OAUTH2_CLIENT_ID=uh8K3FCc7PDtwSb9UeKzWs7QYb89pOWAYWxhJuidOpkUnizblqdk2KggH2y8w9GW
